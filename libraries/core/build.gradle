plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    Properties properties = new Properties()
    if (rootProject.file("local.properties").exists()) {
        properties.load(rootProject.file("local.properties").newDataInputStream())
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'BASE_URL', BASE_URL_DEV
            buildConfigField 'String', 'API_KEY', properties.getProperty("CATS_API_KEY_DEV")
        }

        release {
            buildConfigField 'String', 'BASE_URL', BASE_URL_RELEASE
            buildConfigField 'String', 'API_KEY', properties.getProperty("CATS_API_KEY_RELEASE")
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //Android
    implementation "androidx.core:core-ktx:$versions.ktx"
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"
    implementation "androidx.activity:activity-ktx:$versions.activity"
    implementation "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycleJava"

    //Square
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_interceptor"
    implementation "com.jakewharton.timber:timber:$versions.timber"
    implementation "com.squareup.retrofit2:converter-gson:$versions.gson_converter"

    //Koin
    implementation "io.insert-koin:koin-android:$versions.koin"
}